generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_CONNECTION_STRING")
}

model orders {
  id                 String   @id(map: "orders_pkey1") @default(uuid())
  created_at         DateTime @default(now()) @db.Timestamptz(6)
  status             String
  cart               Json     @db.Json
  transaction_id     String?
  checkout_id        String?
  paid               Boolean?
  gateway            String
  totalUniqueItems   Int
  totalAmount        Int
  customerId         String @default(uuid())
  customer           customers? @relation(fields: [customerId], references: [id])
}

model products {
  id          String    @id @default(uuid())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  name        String
  permalink   String
  summary     String
  description String
  price       Decimal  @db.Decimal
  images      images[]
  variants    variants[]
  enabled     Boolean
}

model variants {
  id          String    @id @default(uuid())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  title       String
  values      String
  enabled     Boolean
  productId   String    @default(uuid())
  product     products? @relation(fields: [productId], references: [id])
}

model customers {
  id         String   @id @default(uuid())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  email      String
  phone      String
  firstName  String
  lastName   String
  address1   String
  suburb     String
  state      String
  postcode   String
  country    String
  orders     orders[]
}

model users {
  id         String   @id @default(uuid())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String
  email      String
  apiKey     String?   @default(uuid())
  enabled    Boolean
}

model images {
  id         String     @id @default(uuid())
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  url        String
  alt        String
  filename   String
  order      Int
  productId  String     @default(uuid())
  product    products?  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model discounts {
  id         String   @id @default(uuid())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String
  code       String
  type       discountType @default(amount)
  value      Decimal  @db.Decimal @default(0)
  enabled    Boolean
  start_at   DateTime @default(now()) @db.Timestamptz(6)
  end_at     DateTime @default(now()) @db.Timestamptz(6)
}

enum discountType {
  amount
  percent
}